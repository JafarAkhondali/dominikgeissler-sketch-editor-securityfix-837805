int W = 32;

bit[W] simple_least_sig1(bit[W] x){
  bit[W] ret = 0;
  for (int i = 0; i < W; i++)
    if (x[i]) { ret[i] = 1; return ret; }
  return ret;
}

generator bit[W] gen(bit[W] x, int bnd){
  assert bnd >= 0;
  if(??) return x;
  if(??) return ??;
  if(??) return ~gen(x, bnd - 1);
  if(??)
  return {| gen(x, bnd-1) (+ | & | ^) gen(x, bnd- 1) |};
}

bit[W] least_sig1(bit[W] x) implements simple_least_sig1{
  return gen(x, 3);
}
